[{"/home/vinaytest/Work/Material-UI-net-ninja/src/index.js":"1","/home/vinaytest/Work/Material-UI-net-ninja/src/App.js":"2","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Notes.jsx":"3","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Create.jsx":"4","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/NoteCard.jsx":"5","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Layout.jsx":"6"},{"size":455,"mtime":1620185987566,"results":"7","hashOfConfig":"8"},{"size":917,"mtime":1620205977360,"results":"9","hashOfConfig":"8"},{"size":936,"mtime":1620205604703,"results":"10","hashOfConfig":"8"},{"size":3244,"mtime":1620198608220,"results":"11","hashOfConfig":"8"},{"size":871,"mtime":1620205668833,"results":"12","hashOfConfig":"8"},{"size":2001,"mtime":1620208607568,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"179cz2v",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/vinaytest/Work/Material-UI-net-ninja/src/index.js",[],["30","31"],"/home/vinaytest/Work/Material-UI-net-ninja/src/App.js",[],"/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Notes.jsx",["32"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport NoteCard from \"./NoteCard\";\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://material-ui-tut.herokuapp.com/notes\")\n      .then((res) => res.json())\n      .then((data) => setNotes(data));\n  }, []);\n\n  const handleDelete = async (id) => {\n    await fetch(\"https://material-ui-tut.herokuapp.com/notes\" + id, {\n      method: \"DELETE\",\n    });\n\n    const newNotes = notes.filter((note) => note.id != id);\n    setNotes(newNotes);\n  };\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        {notes.map((note) => (\n          <Grid item key={note.id} xs={12} md={6} lg={4}>\n            <NoteCard note={note} handleDelete={handleDelete}/>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Create.jsx",["33","34"],"import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBotton: 20,\n    display: \"block\",\n  },\n});\n\nexport default function Create() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState(\"todos\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title == \"\") {\n      setTitleError(true);\n    }\n    if (details == \"\") {\n      setDetailsError(true);\n    }\n    if (title && details) {\n      fetch(\"https://material-ui-tut.herokuapp.com/notes\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify({ title, details, category }),\n      }).then(() => history.push(\"/\"));\n    }\n  };\n\n  return (\n    <Container>\n      <Typography\n        className={classes.title}\n        variant=\"h1\"\n        color=\"textSecondary\"\n        align=\"center\"\n      >\n        Create a new Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setTitle(e.target.value)}\n          className={classes.field}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField\n          onChange={(e) => setDetails(e.target.value)}\n          className={classes.field}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          row={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel\n              value=\"reminders\"\n              control={<Radio />}\n              label=\"Reminders\"\n            />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Submit\n        </Button>\n      </form>\n    </Container>\n  );\n}\n","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/NoteCard.jsx",[],"/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Layout.jsx",["35"],"import { Drawer, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { SubjectOutlined, AddCircleOutlineOutlined } from \"@material-ui/icons\";\nimport { useHistory, useLocation } from \"react-router\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n  },\n  page: {\n    background: \"#f9f9f9\",\n    width: \"100%\",\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  active: {\n    background: \"#f4f4f4\",\n  },\n});\n\nfunction Layout({ children }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div>\n          <Typography variant=\"h5\">Notes</Typography>\n        </div>\n\n        <List>\n          {menuItems.map((item) => (\n            <ListItem\n              button\n              key={item.text}\n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      <div className={classes.page}>{children}</div>\n    </div>\n  );\n}\n\nexport default Layout;\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":20,"column":53,"nodeType":"42","messageId":"43","endLine":20,"endColumn":55},{"ruleId":"40","severity":1,"message":"44","line":39,"column":15,"nodeType":"42","messageId":"43","endLine":39,"endColumn":17},{"ruleId":"40","severity":1,"message":"44","line":42,"column":17,"nodeType":"42","messageId":"43","endLine":42,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":70,"column":44,"nodeType":"42","messageId":"43","endLine":70,"endColumn":46},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]