[{"/home/vinaytest/Work/Material-UI-net-ninja/src/index.js":"1","/home/vinaytest/Work/Material-UI-net-ninja/src/App.js":"2","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Notes.jsx":"3","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Create.jsx":"4","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/NoteCard.jsx":"5","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Layout.jsx":"6","/home/vinaytest/Projects/NoteTakingApp/src/index.js":"7","/home/vinaytest/Projects/NoteTakingApp/src/App.js":"8","/home/vinaytest/Projects/NoteTakingApp/src/Components/Layout.jsx":"9","/home/vinaytest/Projects/NoteTakingApp/src/Components/Create.jsx":"10","/home/vinaytest/Projects/NoteTakingApp/src/Components/Notes.jsx":"11","/home/vinaytest/Projects/NoteTakingApp/src/Components/NoteCard.jsx":"12"},{"size":455,"mtime":1620185987566,"results":"13","hashOfConfig":"14"},{"size":917,"mtime":1620205977360,"results":"15","hashOfConfig":"14"},{"size":1139,"mtime":1620212809278,"results":"16","hashOfConfig":"14"},{"size":3244,"mtime":1620212197761,"results":"17","hashOfConfig":"14"},{"size":1513,"mtime":1620211532405,"results":"18","hashOfConfig":"14"},{"size":2998,"mtime":1620210821834,"results":"19","hashOfConfig":"14"},{"size":220,"mtime":1621426989128,"results":"20","hashOfConfig":"21"},{"size":917,"mtime":1621253320674,"results":"22","hashOfConfig":"21"},{"size":3017,"mtime":1621427530068,"results":"23","hashOfConfig":"21"},{"size":3244,"mtime":1621253320674,"results":"24","hashOfConfig":"21"},{"size":1677,"mtime":1621431374919,"results":"25","hashOfConfig":"21"},{"size":1755,"mtime":1621431273974,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"179cz2v",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2jvj60",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},"/home/vinaytest/Work/Material-UI-net-ninja/src/index.js",[],["59","60"],"/home/vinaytest/Work/Material-UI-net-ninja/src/App.js",[],"/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Notes.jsx",["61","62"],"/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Create.jsx",["63","64"],"import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBotton: 20,\n    display: \"block\",\n  },\n});\n\nexport default function Create() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState(\"todos\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title == \"\") {\n      setTitleError(true);\n    }\n    if (details == \"\") {\n      setDetailsError(true);\n    }\n    if (title && details) {\n      fetch(\"https://material-ui-tut.herokuapp.com/notes\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify({ title, details, category }),\n      }).then(() => history.push(\"/\"));\n    }\n  };\n\n  return (\n    <Container>\n      <Typography\n        className={classes.title}\n        variant=\"h1\"\n        color=\"textSecondary\"\n        align=\"center\"\n      >\n        Create a new Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setTitle(e.target.value)}\n          className={classes.field}\n          label=\"Note Title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField\n          onChange={(e) => setDetails(e.target.value)}\n          className={classes.field}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          row={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel\n              value=\"reminders\"\n              control={<Radio />}\n              label=\"Reminders\"\n            />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Submit\n        </Button>\n      </form>\n    </Container>\n  );\n}\n","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/NoteCard.jsx",["65","66","67"],"import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { blue, pink, yellow } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category == \"work\") {\n        return yellow[700];\n      }\n      if (note.category == \"money\") {\n        return yellow[500];\n      }\n      if (note.category == \"todos\") {\n        return pink[500];\n      }\n      return blue[500];\n    },\n  },\n});\n\nfunction NoteCard({ note, handleDelete }) {\n  const classes = useStyles(note);\n\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <IconButton onClick={() => handleDelete(note.id)}>\n              <DeleteOutlinedIcon />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            {note.details}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default NoteCard;\n","/home/vinaytest/Work/Material-UI-net-ninja/src/Components/Layout.jsx",["68","69"],"import { Avatar, Drawer, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { SubjectOutlined, AddCircleOutlineOutlined } from \"@material-ui/icons\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { format } from \"date-fns\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: \"flex\",\n    },\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      padding: theme.spacing(3),\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appbar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    toolbar: theme.mixins.toolbar,\n    date: {\n      flexGrow: 1,\n    },\n    avatar: {\n      marginLeft: theme.spacing(2),\n    },\n  };\n});\n\nfunction Layout({ children }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n      <AppBar className={classes.appbar} elevation={0}>\n        <Toolbar>\n          <Typography className={classes.date}>\n            Today: {Date().toString()}\n          </Typography>\n          <Typography>Vinay</Typography>\n          <Avatar\n            src=\"https://avatars.githubusercontent.com/u/62155169?v=4\"\n            className={classes.avatar}\n          />\n        </Toolbar>\n      </AppBar>\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            Notes\n          </Typography>\n        </div>\n\n        <List>\n          {menuItems.map((item) => (\n            <ListItem\n              button\n              key={item.text}\n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","/home/vinaytest/Projects/NoteTakingApp/src/index.js",[],"/home/vinaytest/Projects/NoteTakingApp/src/App.js",[],"/home/vinaytest/Projects/NoteTakingApp/src/Components/Layout.jsx",["70","71"],"import { Avatar, Drawer, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { SubjectOutlined, AddCircleOutlineOutlined } from \"@material-ui/icons\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { format } from \"date-fns\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: \"flex\",\n    },\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      padding: theme.spacing(3),\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appbar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    toolbar: theme.mixins.toolbar,\n    date: {\n      flexGrow: 1,\n    },\n    avatar: {\n      marginLeft: theme.spacing(2),\n    },\n  };\n});\n\nfunction Layout({ children }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n      <AppBar className={classes.appbar} elevation={0}>\n        <Toolbar>\n          <Typography className={classes.date}>\n            Today: {Date().toString()}\n          </Typography>\n          <Typography>Vinay</Typography>\n          <Avatar\n            src=\"https://avatars.githubusercontent.com/u/62155169?v=4\"\n            className={classes.avatar}\n          />\n        </Toolbar>\n      </AppBar>\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            Notes\n          </Typography>\n        </div>\n\n        <List>\n          {menuItems.map((item) => (\n            <ListItem\n              button\n              key={item.text}\n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      {/* Notes */}\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","/home/vinaytest/Projects/NoteTakingApp/src/Components/Create.jsx",["72","73"],"/home/vinaytest/Projects/NoteTakingApp/src/Components/Notes.jsx",["74","75","76"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport NoteCard from \"./NoteCard\";\nimport Masonry from \"react-masonry-css\";\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://material-ui-tut.herokuapp.com/notes\")\n      .then((res) => res.json())\n      .then((data) => setNotes(data));\n  }, []);\n\n  const handleDelete = async (id) => {\n    await fetch(\"https://material-ui-tut.herokuapp.com/notes/\" + id, {\n      method: \"DELETE\",\n    });\n\n    const newNotes = notes.filter((note) => note.id != id);\n    setNotes(newNotes);\n  };\n\n  const handleEdit = async (id) => {\n    const newNote = prompt(\"Edit your Notes\");\n\n    const editNote = notes.map((note) => {\n      if (note.id == id) {\n        note.details = newNote;\n      }\n      return note;\n    });\n    setNotes(editNote);\n\n    await fetch(\"https://material-ui-tut.herokuapp.com/notes/\" + id, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ details: newNote }),\n    });\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {notes.map((note) => (\n          <div item key={note.id}>\n            <NoteCard\n              note={note}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n            />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  );\n}\n","/home/vinaytest/Projects/NoteTakingApp/src/Components/NoteCard.jsx",["77","78","79"],"import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { blue, pink, yellow } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category == \"work\") {\n        return yellow[700];\n      }\n      if (note.category == \"money\") {\n        return yellow[500];\n      }\n      if (note.category == \"todos\") {\n        return pink[500];\n      }\n      return blue[500];\n    },\n  },\n});\n\nfunction NoteCard({ note, handleDelete, handleEdit }) {\n  const classes = useStyles(note);\n\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <IconButton onClick={() => handleDelete(note.id)}>\n              <DeleteOutlinedIcon />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            {note.details}\n          </Typography>\n        </CardContent>\n        <IconButton\n          style={{ float: \"right\" }}\n          onClick={() => handleEdit(note.id)}\n        >\n          <EditOutlinedIcon />\n        </IconButton>\n      </Card>\n    </div>\n  );\n}\n\nexport default NoteCard;\n",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":21,"column":53,"nodeType":"92","messageId":"93","endLine":21,"endColumn":55},{"ruleId":"90","severity":1,"message":"94","line":39,"column":15,"nodeType":"92","messageId":"93","endLine":39,"endColumn":17},{"ruleId":"90","severity":1,"message":"94","line":42,"column":17,"nodeType":"92","messageId":"93","endLine":42,"endColumn":19},{"ruleId":"90","severity":1,"message":"94","line":13,"column":25,"nodeType":"92","messageId":"93","endLine":13,"endColumn":27},{"ruleId":"90","severity":1,"message":"94","line":16,"column":25,"nodeType":"92","messageId":"93","endLine":16,"endColumn":27},{"ruleId":"90","severity":1,"message":"94","line":19,"column":25,"nodeType":"92","messageId":"93","endLine":19,"endColumn":27},{"ruleId":"86","severity":1,"message":"95","line":11,"column":10,"nodeType":"88","messageId":"89","endLine":11,"endColumn":16},{"ruleId":"90","severity":1,"message":"94","line":103,"column":44,"nodeType":"92","messageId":"93","endLine":103,"endColumn":46},{"ruleId":"86","severity":1,"message":"95","line":11,"column":10,"nodeType":"88","messageId":"89","endLine":11,"endColumn":16},{"ruleId":"90","severity":1,"message":"94","line":103,"column":44,"nodeType":"92","messageId":"93","endLine":103,"endColumn":46},{"ruleId":"90","severity":1,"message":"94","line":39,"column":15,"nodeType":"92","messageId":"93","endLine":39,"endColumn":17},{"ruleId":"90","severity":1,"message":"94","line":42,"column":17,"nodeType":"92","messageId":"93","endLine":42,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":21,"column":53,"nodeType":"92","messageId":"93","endLine":21,"endColumn":55},{"ruleId":"90","severity":1,"message":"94","line":29,"column":19,"nodeType":"92","messageId":"93","endLine":29,"endColumn":21},{"ruleId":"90","severity":1,"message":"94","line":14,"column":25,"nodeType":"92","messageId":"93","endLine":14,"endColumn":27},{"ruleId":"90","severity":1,"message":"94","line":17,"column":25,"nodeType":"92","messageId":"93","endLine":17,"endColumn":27},{"ruleId":"90","severity":1,"message":"94","line":20,"column":25,"nodeType":"92","messageId":"93","endLine":20,"endColumn":27},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'format' is defined but never used.",["98"],["99"],"no-global-assign","no-unsafe-negation"]